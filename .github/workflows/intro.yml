# Nom du workflow
name: Mon Workflow

# Cette section définit les événements déclencheurs du workflow
on: 
  push:
    branches:
      - main

# Défini les jobs à exécuter dans le workflow
jobs:
  create-pull-request:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du code
        uses: actions/checkout@v4
      - name: Installation de la CLI Github
        run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo gpg --dearmor -o /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg arch=all] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list
          sudo apt update
          sudo apt install gh
      - name: Authentification avec GitHub CLI
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          gh auth setup-git
          gh auth status
      - name: Configurer l'identité Git
        run: |
          git config --global user.email "your-email@example.com"
          git config --global user.name "Your Name"
      - name: Créer une branche temporaire
        run: |
          git checkout -b feature/new-feature || git checkout feature/new-feature
          # Ajoutez des changements ici, par exemple, un nouveau fichier
          echo "Nouvelle fonctionnalité" > nouvelle_fonctionnalite.txt
          git add nouvelle_fonctionnalite.txt
          git commit -m "Ajout d'une nouvelle fonctionnalité"
          git pull origin feature/new-feature --rebase || true
          git push origin feature/new-feature || true
      - name: Vérifier si une pull request existe déjà
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        id: check_pr
        run: |
          gh pr list --head feature/new-feature --json number --jq '.[0].number' > pr_number.txt
          if [ -s pr_number.txt ]; then
            echo "PR_EXISTS=true" >> $GITHUB_ENV
            echo "PR_NUMBER=$(cat pr_number.txt)" >> $GITHUB_ENV
          else
            echo "PR_EXISTS=false" >> $GITHUB_ENV
          fi
      - name: Mettre à jour ou créer une pull request
        if: env.PR_EXISTS == 'false'
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          gh pr create --base main --head feature/new-feature --title "Nouvelle fonctionnalité" --body "Cette pull request ajoute une nouvelle fonctionnalité."
      - name: Ajouter un commentaire à la pull request existante
        if: env.PR_EXISTS == 'true'
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          gh pr comment ${{ env.PR_NUMBER }} --body "Mise à jour automatique de la branche avec de nouvelles modifications."

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du code
        uses: actions/checkout@v4
      - name: Installations des dépendances
        run: npm install
      - name: Exécution des tests
        run: npm test
      - name: Archivage des résultats de tests
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: ./reports/awesome-reports/
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Téléchargement des résultats de tests
        uses: actions/download-artifact@v2
        with:
          name: test-results
      - name: Déploiement sur le serveur de production
        run: |
          echo "Déploiement de l'application sur le serveur"
